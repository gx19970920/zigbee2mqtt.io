"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[59884],{46619:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>d,data:()=>s});var n=a(60362);const o={},d=(0,a(60654).A)(o,[["render",function(e,t){const a=(0,n.g2)("RouteLink");return(0,n.uX)(),(0,n.CE)("div",null,[t[7]||(t[7]=(0,n.Lk)("h1",{id:"immax-07045l",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#immax-07045l"},[(0,n.Lk)("span",null,"Immax 07045L")])],-1)),(0,n.Lk)("table",null,[t[6]||(t[6]=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th"),(0,n.Lk)("th")])],-1)),(0,n.Lk)("tbody",null,[t[2]||(t[2]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Model"),(0,n.Lk)("td",null,"07045L")],-1)),(0,n.Lk)("tr",null,[t[1]||(t[1]=(0,n.Lk)("td",null,"Vendor",-1)),(0,n.Lk)("td",null,[(0,n.bF)(a,{to:"/supported-devices/#v=Immax"},{default:(0,n.k6)(()=>[...t[0]||(t[0]=[(0,n.eW)("Immax",-1)])]),_:1})])]),t[3]||(t[3]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Description"),(0,n.Lk)("td",null,"Magnetic contact sensor")],-1)),t[4]||(t[4]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Exposes"),(0,n.Lk)("td",null,"contact, battery_low, tamper")],-1)),t[5]||(t[5]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Picture"),(0,n.Lk)("td",null,[(0,n.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/07045L.png",alt:"Immax 07045L"})])],-1))])]),t[8]||(t[8]=(0,n.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="contact-binary" tabindex="-1"><a class="header-anchor" href="#contact-binary"><span>Contact (binary)</span></a></h3><p>Indicates if the contact is closed (= true) or open (= false). Value can be found in the published state on the <code>contact</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>false</code> contact is ON, if <code>true</code> OFF.</p><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary"><span>Battery low (binary)</span></a></h3><p>Indicates if the battery of this device is almost empty. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery low is ON, if <code>false</code> OFF.</p><h3 id="tamper-binary" tabindex="-1"><a class="header-anchor" href="#tamper-binary"><span>Tamper (binary)</span></a></h3><p>Indicates whether the device is tampered. Value can be found in the published state on the <code>tamper</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> tamper is ON, if <code>false</code> OFF.</p>',7))])}]]),s=JSON.parse('{"path":"/devices/07045L.html","title":"Immax 07045L control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Immax 07045L control via MQTT","description":"Integrate your Immax 07045L via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2020-02-26T17:45:15.000Z"},"git":{"updatedTime":1761936548000,"contributors":[{"name":"Dan Gibson","username":"","email":"dan@absentcinema.com","commits":1}],"changelog":[{"hash":"f89a0dad532847a4b16b88bc6e3d416cc3de9dbe","time":1761936548000,"email":"dan@absentcinema.com","author":"Dan Gibson","message":"Added image for C3007 Tuya Pressure Sensor Pad (#4372)"}]},"filePathRelative":"devices/07045L.md"}')}}]);