"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[51470],{43438:(e,a,s)=>{s.r(a),s.d(a,{comp:()=>o,data:()=>r});var n=s(60362);const t={},o=(0,s(60654).A)(t,[["render",function(e,a){const s=(0,n.g2)("RouteLink");return(0,n.uX)(),(0,n.CE)("div",null,[a[11]||(a[11]=(0,n.Lk)("h1",{id:"osram-ac0251100nj-ac0251600nj-ac0251700nj",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#osram-ac0251100nj-ac0251600nj-ac0251700nj"},[(0,n.Lk)("span",null,"OSRAM AC0251100NJ/AC0251600NJ/AC0251700NJ")])],-1)),(0,n.Lk)("table",null,[a[6]||(a[6]=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th"),(0,n.Lk)("th")])],-1)),(0,n.Lk)("tbody",null,[a[2]||(a[2]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Model"),(0,n.Lk)("td",null,"AC0251100NJ/AC0251600NJ/AC0251700NJ")],-1)),(0,n.Lk)("tr",null,[a[1]||(a[1]=(0,n.Lk)("td",null,"Vendor",-1)),(0,n.Lk)("td",null,[(0,n.bF)(s,{to:"/supported-devices/#v=OSRAM"},{default:(0,n.k6)(()=>[...a[0]||(a[0]=[(0,n.eW)("OSRAM",-1)])]),_:1})])]),a[3]||(a[3]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Description"),(0,n.Lk)("td",null,"Smart+ switch mini")],-1)),a[4]||(a[4]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Exposes"),(0,n.Lk)("td",null,"battery, action")],-1)),a[5]||(a[5]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Picture"),(0,n.Lk)("td",null,[(0,n.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/AC0251100NJ-AC0251600NJ-AC0251700NJ.png",alt:"OSRAM AC0251100NJ/AC0251600NJ/AC0251700NJ"})])],-1))])]),a[12]||(a[12]=(0,n.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><h3 id="pairing" tabindex="-1"><a class="header-anchor" href="#pairing"><span>Pairing</span></a></h3><p>For the OSRAM Smart+ Switch Mini (AC0251100NJ/AC0251600NJ/AC0251700NJ) hold the Middle and Arrow Down Buttons for 10 Seconds to Reset the Device. Hold the Middle and Arrow Up Buttons for 3 Seconds to connect. If the Switch is connected hold Middle and Arrow Up Buttons for 3 Seconds to disconnect.</p><h3 id="known-issue-pressing-a-button-unexpectedly-switches-other-zigbee-devices" tabindex="-1"><a class="header-anchor" href="#known-issue-pressing-a-button-unexpectedly-switches-other-zigbee-devices"><span>Known issue - pressing a button unexpectedly switches other Zigbee devices</span></a></h3><p>This is referenced in <a href="https://github.com/Koenkk/zigbee2mqtt/issues/962" target="_blank" rel="noopener noreferrer">this issue</a>. Problem occurs because of default bindings to group 0.</p><p>Known workaround is to create an empty group in Z2M with different ID (example: 1111), bind all three buttons to this group and remove default bindings to group 0.<br> Read more on a similar issue and workarounds in <a href="https://github.com/Koenkk/zigbee2mqtt/issues/12397" target="_blank" rel="noopener noreferrer">this issue</a> related to other device.</p><h3 id="actions" tabindex="-1"><a class="header-anchor" href="#actions"><span>Actions</span></a></h3><h4 id="arrow-up" tabindex="-1"><a class="header-anchor" href="#arrow-up"><span>Arrow up</span></a></h4><p>causes &#39;on&#39; at short pressure; &#39;brightness_move_up&#39; at long pressure (&gt;1 sec); &#39;brightness_stop&#39; at long pressure release</p><h4 id="circle" tabindex="-1"><a class="header-anchor" href="#circle"><span>Circle</span></a></h4><p>causes &#39;brightness_move_to_level&#39; at short pressure; &#39;move_to_saturation&#39; at long pressure (&gt;1 sec); &#39;hue_stop&#39; at long pressure release</p><h4 id="arrow-down" tabindex="-1"><a class="header-anchor" href="#arrow-down"><span>Arrow down</span></a></h4><p>causes &#39;off&#39; at short pressure; &#39;brightness_move_down&#39; at long pressure (&gt;1 sec); &#39;brightness_stop&#39; at long pressure release</p><h2 id="ota-updates" tabindex="-1"><a class="header-anchor" href="#ota-updates"><span>OTA updates</span></a></h2>',14)),(0,n.Lk)("p",null,[a[8]||(a[8]=(0,n.eW)("This device supports OTA updates, for more information see ",-1)),(0,n.bF)(s,{to:"/guide/usage/ota_updates.html"},{default:(0,n.k6)(()=>[...a[7]||(a[7]=[(0,n.eW)("OTA updates",-1)])]),_:1}),a[9]||(a[9]=(0,n.eW)(".",-1))]),a[13]||(a[13]=(0,n.Lk)("h2",{id:"options",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#options"},[(0,n.Lk)("span",null,"Options")])],-1)),(0,n.Lk)("p",null,[(0,n.Lk)("em",null,[(0,n.bF)(s,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,n.k6)(()=>[...a[10]||(a[10]=[(0,n.eW)("How to use device type specific configuration",-1)])]),_:1})])]),a[14]||(a[14]=(0,n.Fv)('<ul><li><code>simulated_brightness</code>: Simulate a brightness value. If this device provides a brightness_move_up or brightness_move_down action it is possible to specify the update interval and delta. The action_brightness_delta indicates the delta for each interval. Example:</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token key atrule">simulated_brightness</span><span class="token punctuation">:</span></span>\n<span class="line">  <span class="token key atrule">delta</span><span class="token punctuation">:</span> <span class="token number">20</span> <span class="token comment"># delta per interval, default = 20</span></span>\n<span class="line">  <span class="token key atrule">interval</span><span class="token punctuation">:</span> <span class="token number">200</span> <span class="token comment"># interval in milliseconds, default = 200</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric"><span>Battery (numeric)</span></a></h3><p>Remaining battery in %, can take up to 24 hours before reported. Value can be found in the published state on the <code>battery</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum"><span>Action (enum)</span></a></h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>on</code>, <code>brightness_move_up</code>, <code>brightness_move_down</code>, <code>brightness_stop</code>, <code>color_temperature_move</code>, <code>hue_move</code>, <code>hue_stop</code>, <code>move_to_saturation</code>, <code>off</code>, <code>brightness_move_to_level</code>.</p>',7))])}]]),r=JSON.parse('{"path":"/devices/AC0251100NJ_AC0251600NJ_AC0251700NJ.html","title":"OSRAM AC0251100NJ/AC0251600NJ/AC0251700NJ control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"OSRAM AC0251100NJ/AC0251600NJ/AC0251700NJ control via MQTT","description":"Integrate your OSRAM AC0251100NJ/AC0251600NJ/AC0251700NJ via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2021-09-01T18:11:17.000Z"},"git":{"updatedTime":1761936548000,"contributors":[{"name":"Dan Gibson","username":"","email":"dan@absentcinema.com","commits":1}],"changelog":[{"hash":"f89a0dad532847a4b16b88bc6e3d416cc3de9dbe","time":1761936548000,"email":"dan@absentcinema.com","author":"Dan Gibson","message":"Added image for C3007 Tuya Pressure Sensor Pad (#4372)"}]},"filePathRelative":"devices/AC0251100NJ_AC0251600NJ_AC0251700NJ.md"}')}}]);